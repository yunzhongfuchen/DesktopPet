#include "../lib/main_listWidget.h"


main_listwidget::main_listwidget(QWidget *parent) :
    QWidget(parent)
{
    main_listWidget = new QWidget();

    ReadListWidgetStyle();

    listWidgeLayout();
    ConnectInit();

    this->setLayout(list_hLayout);
    this->setMinimumSize(1020,525);
    this->setObjectName("list_mainWidget");
    this->setAttribute(Qt::WA_StyledBackground);
}

void main_listwidget::listWidgeLayout()
{
    for (int i=0; i<2; i++)
        list_ScrollLabel[i] = new QLabel();

    for (int i=0; i<3; i++)
        list_ScrollWidget[i] = new QListWidget();
    setList1();
    setList2();
    setList3();
    list_ScrollLabel[0]->setText("我的音乐");
    list_ScrollLabel[0]->setObjectName("favor_Label");
    list_ScrollLabel[0]->setFrameStyle(QFrame::NoFrame);
    list_ScrollLabel[0]->setContentsMargins(0,0,0,0);
    list_ScrollLabel[1]->setText("创建的歌单");
    list_ScrollLabel[1]->setObjectName("CreatePlaylist_Label");
    list_ScrollLabel[1]->setFrameStyle(QFrame::NoFrame);

    Scroll_vLayout = new QVBoxLayout();
    Scroll_vLayout->addWidget(list_ScrollWidget[0]);
    Scroll_vLayout->addWidget(list_ScrollLabel[0]);
    Scroll_vLayout->addWidget(list_ScrollWidget[1]);
    Scroll_vLayout->addWidget(list_ScrollLabel[1]);
    Scroll_vLayout->addWidget(list_ScrollWidget[2]);
    Scroll_vLayout->addStretch();
    Scroll_vLayout->setContentsMargins(0,0,0,0);

    mainScrollArea = new QScrollArea();
    mainScrollArea->setMinimumWidth(200);
    mainScrollArea->setMaximumWidth(200);
    mainScrollArea->setLayout(Scroll_vLayout);
    mainScrollArea->setContentsMargins(0,0,0,0);
    //mainScrollArea->setFrameStyle(QFrame::NoFrame);
    mainScrollArea->setObjectName("list_ScrollWidget");


    list_hSpacer = new QSpacerItem(20,540,
                                   QSizePolicy::Maximum,
                                   QSizePolicy::Expanding);
    setStackWidget();

    list_hLayout = new QHBoxLayout();
    list_hLayout->addWidget(mainScrollArea);
    list_hLayout->addSpacerItem(list_hSpacer);
    list_hLayout->addWidget(main_stackWidget);
    list_hLayout->setContentsMargins(0,0,0,0);
}


void main_listwidget::setList1(void)
{
    list_ScrollWidget[0] = new QListWidget();//导航列表
    list_ScrollWidget[0]->setMinimumSize(200,200);
    list_ScrollWidget[0]->setContentsMargins(0,0,0,0);
    list_ScrollWidget[0]->setSizePolicy(QSizePolicy::Expanding,
                                        QSizePolicy::Expanding);
    list_ScrollWidget[0]->setObjectName("list1Widget");
    //去除边框线
    list_ScrollWidget[0]->setFrameStyle(QFrame::NoFrame);
    //去除选中虚线框
    list_ScrollWidget[0]->setFocusPolicy(Qt::NoFocus);
    list_ScrollWidget[0]->setVerticalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    list_ScrollWidget[0]->setHorizontalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    connect(list_ScrollWidget[0],SIGNAL(itemClicked(QListWidgetItem *)),
            this,SLOT(on_list1Widget_itemClicked(QListWidgetItem *)));

    QListWidgetItem *foundMusic = new QListWidgetItem();
    foundMusic->setText("发现音乐");
    QListWidgetItem *video = new QListWidgetItem();
    video->setText("视频");
    QListWidgetItem *friends = new QListWidgetItem();
    friends->setText("朋友");
    QListWidgetItem *live = new QListWidgetItem();
    live->setText("直播");
    QListWidgetItem *privateFM = new QListWidgetItem();
    privateFM->setText("私人FM");
    list_ScrollWidget[0]->addItem(foundMusic);
    list_ScrollWidget[0]->addItem(video);
    list_ScrollWidget[0]->addItem(friends);
    list_ScrollWidget[0]->addItem(live);
    list_ScrollWidget[0]->addItem(privateFM);
    //设置默认选中第一行
    list_ScrollWidget[0]->setCurrentRow(0);
}
void main_listwidget::setList2(void)
{
    list_ScrollWidget[1] = new QListWidget();
    list_ScrollWidget[1]->setMinimumSize(200,200);
    list_ScrollWidget[1]->setContentsMargins(0,0,0,0);
    list_ScrollWidget[1]->setSizePolicy(QSizePolicy::Expanding,
                                        QSizePolicy::Expanding);
    list_ScrollWidget[1]->setObjectName("list2Widget");
    list_ScrollWidget[1]->setFrameStyle(QFrame::NoFrame);
    list_ScrollWidget[1]->setVerticalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    //去除选中虚线框
    list_ScrollWidget[1]->setFocusPolicy(Qt::NoFocus);
    list_ScrollWidget[1]->setHorizontalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    connect(list_ScrollWidget[1],SIGNAL(itemClicked(QListWidgetItem *)),
            this,SLOT(on_list2Widget_itemClicked(QListWidgetItem *)));

    QListWidgetItem *localmusic = new QListWidgetItem();
    localmusic->setIcon(QIcon(QPixmap(":/images/listWidget/btn_localmusic.png").scaled(18,17)));
    localmusic->setText("本地音乐");
    QListWidgetItem *downloadManage = new QListWidgetItem();
    downloadManage->setIcon(QIcon(QPixmap(":/images/listWidget/btn_download.png").scaled(18,17)));
    downloadManage->setText("下载管理");
    QListWidgetItem *musicCloudDisk = new QListWidgetItem();
    musicCloudDisk->setIcon(QIcon(QPixmap(":/images/listWidget/btn_cloudmusic.png").scaled(18,18)));
    musicCloudDisk->setText("我的音乐云盘");
    QListWidgetItem *radioStation = new QListWidgetItem();
    radioStation->setIcon(QIcon(":/images/listWidget/btn_mystation.png"));
    radioStation->setText("我的电台");
    QListWidgetItem *collection = new QListWidgetItem();
    collection->setIcon(QIcon(":/images/listWidget/btn_mycollect.png"));
    collection->setText("我的收藏");
    list_ScrollWidget[1]->addItem(localmusic);
    list_ScrollWidget[1]->addItem(downloadManage);
    list_ScrollWidget[1]->addItem(musicCloudDisk);
    list_ScrollWidget[1]->addItem(radioStation);
    list_ScrollWidget[1]->addItem(collection);
}
void main_listwidget::setList3(void)
{
    list_ScrollWidget[2] = new QListWidget();
    list_ScrollWidget[2]->setMinimumSize(200,40);
    list_ScrollWidget[2]->setContentsMargins(0,0,0,0);
    list_ScrollWidget[2]->setSizePolicy(QSizePolicy::Expanding,
                                        QSizePolicy::Expanding);
    list_ScrollWidget[2]->setObjectName("list3Widget");
    list_ScrollWidget[2]->setFrameStyle(QFrame::NoFrame);
    list_ScrollWidget[2]->setVerticalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    list_ScrollWidget[2]->setHorizontalScrollBarPolicy(
                Qt::ScrollBarAlwaysOff);
    QListWidgetItem *favorMusic = new QListWidgetItem();
    favorMusic->setText("我喜欢的音乐");
    list_ScrollWidget[2]->addItem(favorMusic);

}

void main_listwidget::setStackWidget(void)
{
    main_stackWidget =new QStackedWidget(this);
    main_stackWidget->setObjectName("main_stackWidget");

    //发现音乐界面初始化
    main_stackfoud = new foundmusic();
    //视频界面
    main_stackvideo = new stack_video();
    //朋友界面
    stack_video *main_friend = new stack_video();
    //直播界面
    stack_video *main_live = new stack_video();
    //私人FM
    stack_video *main_FM = new stack_video();

    //本地音乐界面
    main_stacklocal = new localMusic(main_stackWidget);

    //音乐搜索界面
    main_findmusic = new findmusic();

    main_stackWidget->addWidget(main_stackfoud->list_tabWidget);
    main_stackWidget->addWidget(main_stackvideo);
    main_stackWidget->addWidget(main_friend);
    main_stackWidget->addWidget(main_live);
    main_stackWidget->addWidget(main_FM);

    main_stackWidget->addWidget(main_stacklocal);
    main_stackWidget->addWidget(main_findmusic);


    main_stackWidget->setMinimumSize(800,525);
    main_stackWidget->setCurrentIndex(0);
}

void main_listwidget::ReadListWidgetStyle(void)
{
    QFile file(":/main_listWidget.qss");

    file.open(QIODevice::ReadOnly);
    if(file.isOpen())
    {
        QString style = this->styleSheet();
        style += QLatin1String(file.readAll());
        this->setStyleSheet(style);
        file.close();
    }
}

void main_listwidget::on_list1Widget_itemClicked(QListWidgetItem *item)
{
    //去除另外一个关联list的选中
    list_ScrollWidget[1]->clearSelection();
//    item->font().setBold(true);
//    QFont font;
//    font.setFamily("微软雅黑");
//    font.setPointSize(11);

//    for(int i=0;i<5;i++)
//    {
//        list_ScrollWidget[0]->item(i)->setFont(font);
//    }
//    list_ScrollWidget[0]->setFont(font);
//    //list_ScrollWidget[0]->row(item);
//    //qDebug() << "currentRow" << list_ScrollWidget[0]->currentRow();

//    font = item->font();
//    font.setBold(true);
//    font.setPointSize(font.pointSize()+3);
//    //list_ScrollWidget[0]->item(list_ScrollWidget[0]->row(item))->setFont(font);

    main_stackWidget->setCurrentIndex(list_ScrollWidget[0]->currentRow());
}
void main_listwidget::on_list2Widget_itemClicked(QListWidgetItem *item)
{
    //去除另外一个关联list的选中
    list_ScrollWidget[0]->clearSelection();

    main_stackWidget->setCurrentIndex(list_ScrollWidget[1]->currentRow()+5);
}

void main_listwidget::ConnectInit(void)
{
    PSEventController::subscribe(this,EVENT_CHANGESTACKWIDGET);
}

void main_listwidget::on_psEvent_changeStackWidget(int index)
{
    main_stackWidget->setCurrentIndex(index);
    list_ScrollWidget[0]->clearSelection();
    list_ScrollWidget[1]->clearSelection();

    QWidget *findwidget = nullptr;
    QWidgetList allWidgetlist = QApplication::allWidgets();

    for(QWidget *pwd : allWidgetlist)
    {
        if (pwd->objectName() == "music_playWidget")
        {
            findwidget = pwd;
        }
    }
    if (findwidget!=nullptr)
    {
        if(!findwidget->isHidden())
            findwidget->hide();
    }
}


//大小变化
void main_listwidget::resizeEvent(QResizeEvent *event)
{


}
